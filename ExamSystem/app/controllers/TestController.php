<?php

//学生对答卷的操作
class TestController extends \BaseController
{

    /**
     * Display a listing of the resource.
     *
     * @return Response
     */
    public function index()
    {
        $tests = TestPaper::all();
        return View::make('test.index', [
            'tests' => $tests
        ]);
    }


    /**
     * Show the form for creating a new resource.
     *
     * @return Response
     */
    public function create()
    {
        //
    }


    /**
     * Store a newly created resource in storage.
     *
     * @return Response
     */
    public function store()
    {
        //
    }


    /**
     * Display the specified resource.
     *
     * @param  int $id
     * @return Response
     */
    public function show($id)
    {
        $testpaper = TestPaper::find($id);
        if (time() > strtotime($testpaper->end_time) || time() < strtotime($testpaper->start_time))
            return View::make('error', [
                'error' => "不在考试时间范围"
            ]);
        if (Request::ajax()) {
            $testquestions = TestQuestion::where('testpaper_id', '=', $testpaper->id)->get();
            $questions = [];
            foreach ($testquestions as $tq) {
                $question = Question::find($tq->question_id);
                $answer = TestAnswer::FirstOrNew([
                    'username' => Auth::user()->username,
                    'testquestion_id' => $tq->id
                ]);
                $questions[] = [
                    'tqid' => $tq->id,
                    'type' => $question->type,
                    'content' => $question->content,
                    'value' => $tq->value,
                    'placement' => $tq->placement,
                    'answer' => $answer->answer
                ];
            }
            $data = [
                'testinfo' => $testpaper,
                'questions' => $questions
            ];
            return $data;
        } else
            return View::make('test.show');

    }


    /**
     * Show the form for editing the specified resource.
     *
     * @param  int $id
     * @return Response
     */
    public function edit($id)
    {
        //
    }


    /**
     * Update the specified resource in storage.
     *
     * @param  int $id
     * @return Response
     */
    public function update($id)
    {
        //
    }


    /**
     * Remove the specified resource from storage.
     *
     * @param  int $id
     * @return Response
     */
    public function destroy($id)
    {
        //
    }

    public function answer($id)
    {
        $test = TestPaper::find($id);
        if (time() > strtotime($test->end_time) || time() < strtotime($test->start_time))
            return "not right time";
        $data = Input::all();
        foreach ($data as $answer) {
            $testquestion = TestQuestion::find($answer['tqid']);
            if ($testquestion->testpaper_id != $id)
                continue;
            $question = Question::find($testquestion->question_id);
            $testanswer = TestAnswer::FirstOrNew([
                'username' => Auth::user()->username,
                'testquestion_id' => $answer['tqid']
            ]);
            $testanswer->testpaper_id = $id;
            $testanswer->answer = $answer['answer'];
            if ($question->type == 'programing') {
//                $request = \Illuminate\Http\Request::create('http://192.168.1.49:8888/judge/', 'POST',
//                    ['timeLimit' => '1000', 'spaceLimit' => '1048576', 'problemId' => $question->id, 'compiler' => 'cpp', 'runId' => $testanswer->id, 'code'=>  $answer['answer']]);
//                $x = $request->getContent();
//                $phoneNumber = '13912345678';
//                $message = 'This message was generated by curl and php';
//                $curlPost = 'pNUMBER='  . urlencode($phoneNumber) . '&MESSAGE=' . urlencode($message) . '&SUBMIT=Send';
                $curlPost = 'timeLimit=' . urlencode(1000) . '&spaceLimit=' . urlencode('1048576') . '&problemId=' . urlencode('' . $question->id) . '&compiler=' . urlencode('cpp') . '&runId=' . urlencode('' . $testanswer->id) . '&code=' . urlencode(json_decode($answer['answer']));
                $ch = curl_init();
                curl_setopt($ch, CURLOPT_URL, 'http://192.168.58.138:8888/judge/');
                curl_setopt($ch, CURLOPT_HEADER, 1);
                curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
                curl_setopt($ch, CURLOPT_POST, 1);
                curl_setopt($ch, CURLOPT_POSTFIELDS, $curlPost);
                $data = curl_exec($ch);
                curl_close($ch);

            }
            $testanswer->save();
        }
    }
}
